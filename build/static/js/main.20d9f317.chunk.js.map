{"version":3,"sources":["cards.js","redux/reducer.js","store.js","redux/actions.js","components/Header/components/ToggleMenu.js","components/Header/components/Switch.js","components/Header/components/NavBar.js","components/Header/Header.js","components/Body/CategoryCard.js","components/Body/Card.js","components/Body/Body.js","components/CategoryPage/CategoryPage.js","components/ResultPage.js","App.js","serviceWorker.js","index.js"],"names":["cards","id","name","image","word","translation","audioSrc","defaultState","categoryCards","isMenuOpen","copyCard","audioSRC","wordTranslation","undefined","isCardFlipped","activeCategory","modeTrain","correctAnswer","answers","gameWord","gameCards","gameOver","errors","reducers","combineReducers","body","state","action","type","displayed–°ards","localStorage","getItem","JSON","parse","payload","setItem","stringify","length","cardsPl","random","Math","floor","audioObj","Audio","play","window","location","Event","preventDefault","newAray","filter","elem","console","log","answer","store","createStore","showCategoryCards","getCategoryCards","getSoundWord","audio","getWordTraslation","showMenu","switchAplicationMode","startTheGame","markCorrectAnswer","markWrongAnswer","ToggleMenu","connect","dispatch","bindActionCreators","getMenu","onClick","className","Switch","switchMode","NavBar","showCard","getCards","useEffect","onclick","useCallback","to","map","Header","CategoryCard","showCards","dataId","src","Card","getTraslation","markCorrect","markError","startGame","clickRotate","style","transform","opacity","includes","onMouseOut","crs","Body","trainWord","CategoryPage","wrongAnswer","clickStart","clickTrain","clickPlay","setTimeout","ResultPage","App","path","exact","render","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.20d9f317.chunk.js","sourcesContent":["const cards = [\n    //   ['Action (set A)', 'Action (set B)', 'Animal (set A)', 'Animal (set B)', 'Clothes', 'Emotions'],\n    [\n        { id: 1, name: 'Action (set A)', image: 'img/dance.jpg' },\n        { id: 2, name: 'Action (set B)', image: 'img/draw.jpg' },\n        { id: 3, name: 'Animal (set A)', image: 'img/dog.jpg' },\n        { id: 4, name: 'Animal (set B)', image: 'img/cat.jpg' },\n        { id: 5, name: 'Clothes', image: 'img/dress.jpg' },\n        { id: 6, name: 'Emotions', image: 'img/smile.jpg' }\n    ],\n    [\n        {\n            word: 'cry',\n            translation: '–ø–ª–∞–∫–∞—Ç—å',\n            image: 'img/cry.jpg',\n            audioSrc: 'audio/cry.mp3'\n        },\n        {\n            word: 'dance',\n            translation: '—Ç–∞–Ω—Ü–µ–≤–∞—Ç—å',\n            image: 'img/dance.jpg',\n            audioSrc: 'audio/dance.mp3'\n        },\n        {\n            word: 'dive',\n            translation: '–Ω—ã—Ä—è—Ç—å',\n            image: 'img/dive.jpg',\n            audioSrc: 'audio/dive.mp3'\n        },\n        {\n            word: 'draw',\n            translation: '—Ä–∏—Å–æ–≤–∞—Ç—å',\n            image: 'img/draw.jpg',\n            audioSrc: 'audio/draw.mp3'\n        },\n        {\n            word: 'fish',\n            translation: '–ª–æ–≤–∏—Ç—å —Ä—ã–±—É',\n            image: 'img/fish.jpg',\n            audioSrc: 'audio/fish.mp3'\n        },\n        {\n            word: 'fly',\n            translation: '–ª–µ—Ç–∞—Ç—å',\n            image: 'img/fly.jpg',\n            audioSrc: 'audio/fly.mp3'\n        },\n        {\n            word: 'hug',\n            translation: '–æ–±–Ω–∏–º–∞—Ç—å',\n            image: 'img/hug.jpg',\n            audioSrc: 'audio/hug.mp3'\n        },\n        {\n            word: 'jump',\n            translation: '–ø—Ä—ã–≥–∞—Ç—å',\n            image: 'img/jump.jpg',\n            audioSrc: 'audio/jump.mp3'\n        }\n    ],\n    [\n        {\n            word: 'open',\n            translation: '–æ—Ç–∫—Ä—ã–≤–∞—Ç—å',\n            image: 'img/open.jpg',\n            audioSrc: 'audio/open.mp3'\n        },\n        {\n            word: 'play',\n            translation: '–∏–≥—Ä–∞—Ç—å',\n            image: 'img/play.jpg',\n            audioSrc: 'audio/play.mp3'\n        },\n        {\n            word: 'point',\n            translation: '—É–∫–∞–∑—ã–≤–∞—Ç—å',\n            image: 'img/point.jpg',\n            audioSrc: 'audio/point.mp3'\n        },\n        {\n            word: 'ride',\n            translation: '–µ–∑–¥–∏—Ç—å',\n            image: 'img/ride.jpg',\n            audioSrc: 'audio/ride.mp3'\n        },\n        {\n            word: 'run',\n            translation: '–±–µ–≥–∞—Ç—å',\n            image: 'img/run.jpg',\n            audioSrc: 'audio/run.mp3'\n        },\n        {\n            word: 'sing',\n            translation: '–ø–µ—Ç—å',\n            image: 'img/sing.jpg',\n            audioSrc: 'audio/sing.mp3'\n        },\n        {\n            word: 'skip',\n            translation: '–ø—Ä–æ–ø—É—Å–∫–∞—Ç—å, –ø—Ä—ã–≥–∞—Ç—å',\n            image: 'img/skip.jpg',\n            audioSrc: 'audio/skip.mp3'\n        },\n        {\n            word: 'swim',\n            translation: '–ø–ª–∞–≤–∞—Ç—å',\n            image: 'img/swim.jpg',\n            audioSrc: 'audio/swim.mp3'\n        }\n    ],\n    [\n        {\n            word: 'cat',\n            translation: '–∫–æ—Ç',\n            image: 'img/cat.jpg',\n            audioSrc: 'audio/cat.mp3'\n        },\n        {\n            word: 'chick',\n            translation: '—Ü—ã–ø–ª—ë–Ω–æ–∫',\n            image: 'img/chick.jpg',\n            audioSrc: 'audio/chick.mp3'\n        },\n        {\n            word: 'chicken',\n            translation: '–∫—É—Ä–∏—Ü–∞',\n            image: 'img/chicken.jpg',\n            audioSrc: 'audio/chicken.mp3'\n        },\n        {\n            word: 'dog',\n            translation: '—Å–æ–±–∞–∫–∞',\n            image: 'img/dog.jpg',\n            audioSrc: 'audio/dog.mp3'\n        },\n        {\n            word: 'horse',\n            translation: '–ª–æ—à–∞–¥—å',\n            image: 'img/horse.jpg',\n            audioSrc: 'audio/horse.mp3'\n        },\n        {\n            word: 'pig',\n            translation: '—Å–≤–∏–Ω—å—è',\n            image: 'img/pig.jpg',\n            audioSrc: 'audio/pig.mp3'\n        },\n        {\n            word: 'rabbit',\n            translation: '–∫—Ä–æ–ª–∏–∫',\n            image: 'img/rabbit.jpg',\n            audioSrc: 'audio/rabbit.mp3'\n        },\n        {\n            word: 'sheep',\n            translation: '–æ–≤—Ü–∞',\n            image: 'img/sheep.jpg',\n            audioSrc: 'audio/sheep.mp3'\n        }\n    ],\n    [\n        {\n            word: 'bird',\n            translation: '–ø—Ç–∏—Ü–∞',\n            image: 'img/bird.jpg',\n            audioSrc: 'audio/bird.mp3'\n        },\n        {\n            word: 'fish',\n            translation: '—Ä—ã–±–∞',\n            image: 'img/fish1.jpg',\n            audioSrc: 'audio/fish.mp3'\n        },\n        {\n            word: 'frog',\n            translation: '–∂–∞–±–∞',\n            image: 'img/frog.jpg',\n            audioSrc: 'audio/frog.mp3'\n        },\n        {\n            word: 'giraffe',\n            translation: '–∂–∏—Ä–∞—Ñ–∞',\n            image: 'img/giraffe.jpg',\n            audioSrc: 'audio/giraffe.mp3'\n        },\n        {\n            word: 'lion',\n            translation: '–ª–µ–≤',\n            image: 'img/lion.jpg',\n            audioSrc: 'audio/lion.mp3'\n        },\n        {\n            word: 'mouse',\n            translation: '–º—ã—à—å',\n            image: 'img/mouse.jpg',\n            audioSrc: 'audio/mouse.mp3'\n        },\n        {\n            word: 'turtle',\n            translation: '—á–µ—Ä–µ–ø–∞—Ö–∞',\n            image: 'img/turtle.jpg',\n            audioSrc: 'audio/turtle.mp3'\n        },\n        {\n            word: 'dolphin',\n            translation: '–¥–µ–ª—å—Ñ–∏–Ω',\n            image: 'img/dolphin.jpg',\n            audioSrc: 'audio/dolphin.mp3'\n        }\n    ],\n    [\n        {\n            word: 'skirt',\n            translation: '—é–±–∫–∞',\n            image: 'img/skirt.jpg',\n            audioSrc: 'audio/skirt.mp3'\n        },\n        {\n            word: 'pants',\n            translation: '–±—Ä—é–∫–∏',\n            image: 'img/pants.jpg',\n            audioSrc: 'audio/pants.mp3'\n        },\n        {\n            word: 'blouse',\n            translation: '–±–ª—É–∑–∫–∞',\n            image: 'img/blouse.jpg',\n            audioSrc: 'audio/blouse.mp3'\n        },\n        {\n            word: 'dress',\n            translation: '–ø–ª–∞—Ç—å–µ',\n            image: 'img/dress.jpg',\n            audioSrc: 'audio/dress.mp3'\n        },\n        {\n            word: 'boot',\n            translation: '–±–æ—Ç–∏–Ω–æ–∫',\n            image: 'img/boot.jpg',\n            audioSrc: 'audio/boot.mp3'\n        },\n        {\n            word: 'shirt',\n            translation: '—Ä—É–±–∞—à–∫–∞',\n            image: 'img/shirt.jpg',\n            audioSrc: 'audio/shirt.mp3'\n        },\n        {\n            word: 'coat',\n            translation: '–ø–∞–ª—å—Ç–æ',\n            image: 'img/coat.jpg',\n            audioSrc: 'audio/coat.mp3'\n        },\n        {\n            word: 'shoe',\n            translation: '—Ç—É—Ñ–ª–∏',\n            image: 'img/shoe.jpg',\n            audioSrc: 'audio/shoe.mp3'\n        }\n    ],\n    [\n        {\n            word: 'sad',\n            translation: '–≥—Ä—É—Å—Ç–Ω—ã–π',\n            image: 'img/sad.jpg',\n            audioSrc: 'audio/sad.mp3'\n        },\n        {\n            word: 'angry',\n            translation: '—Å–µ—Ä–¥–∏—Ç—ã–π',\n            image: 'img/angry.jpg',\n            audioSrc: 'audio/angry.mp3'\n        },\n        {\n            word: 'happy',\n            translation: '—Å—á–∞—Å—Ç–ª–∏–≤—ã–π',\n            image: 'img/happy.jpg',\n            audioSrc: 'audio/happy.mp3'\n        },\n        {\n            word: 'tired',\n            translation: '—É—Å—Ç–∞–≤—à–∏–π',\n            image: 'img/tired.jpg',\n            audioSrc: 'audio/tired.mp3'\n        },\n        {\n            word: 'surprised',\n            translation: '—É–¥–∏–≤–ª—ë–Ω–Ω—ã–π',\n            image: 'img/surprised.jpg',\n            audioSrc: 'audio/surprised.mp3'\n        },\n        {\n            word: 'scared',\n            translation: '–∏—Å–ø—É–≥–∞–Ω–Ω—ã–π',\n            image: 'img/scared.jpg',\n            audioSrc: 'audio/scared.mp3'\n        },\n        {\n            word: 'smile',\n            translation: '—É–ª—ã–±–∫–∞',\n            image: 'img/smile.jpg',\n            audioSrc: 'audio/smile.mp3'\n        },\n        {\n            word: 'laugh',\n            translation: '—Å–º–µ—Ö',\n            image: 'img/laugh.jpg',\n            audioSrc: 'audio/laugh.mp3'\n        }\n    ]\n]\n\nexport default cards;","import cards from '../cards'\n\nconst defaultState = {\n    categoryCards: '',\n    isMenuOpen: false,\n    cards: '',\n    copyCard: '',\n    audioSRC: '',\n    wordTranslation: undefined,\n    isCardFlipped: false,\n    activeCategory: undefined,\n    modeTrain: true,\n    correctAnswer: [],\n    answers: [],\n    gameWord: '',\n    gameCards: [],\n    gameOver: false,\n    errors: 0\n}\n\nexport const bodyReducer = (state = defaultState, action) => {\n    debugger\n    switch (action.type) {\n\n        case 'GET_CATEGORY_CARDS': {\n            \n            const displayed–°ards = localStorage.getItem('cards') ? \n            JSON.parse(localStorage.getItem('cards')): []\n\n            return {\n                ...state,\n                categoryCards: cards[0],\n                cards: displayed–°ards,\n                copyCard: displayed–°ards\n            }\n        }\n\n        case 'SHOW_MENU': {\n            \n            return {\n                ...state,\n                isMenuOpen: !state.isMenuOpen,\n            }\n        }\n\n        case 'SHOW_CATEGORY_CARDS': {\n            const id = action.payload\n            \n            localStorage.setItem('cards', JSON.stringify(cards[id]))\n            const displayed–°ards = JSON.parse(localStorage.getItem('cards'))\n\n            return {\n                ...state,\n                cards: displayed–°ards,\n                activeCategory: id,\n            }\n        }\n\n        case 'GET_TRANSLATION': {\n            const word = action.payload\n\n            return {\n                ...state,\n                wordTranslation: word,\n            }\n        }\n\n        case 'SWITCH_MODE': {\n            \n            return {\n                ...state,\n                modeTrain: !state.modeTrain\n            }\n        }\n\n        case 'START_GAME': {\n            debugger\n\n                if (state.copyCard.length > 0) {\n\n                    const cardsPl = [...state.copyCard]\n                    var random = Math.floor(Math.random() *  cardsPl.length);\n        \n                    const audioObj = new Audio(`/${cardsPl[random].audioSrc}`);\n                    audioObj.play()\n                        \n                    return {\n                        ...state,\n                        gameWord: state.copyCard[random].word,\n                    }\n                } else {\n                    debugger\n                    window.location = '/result'\n                    Event.preventDefault()\n\n                    return {\n                        ...state,\n                        gameOver: true\n                    }\n                } \n        }\n\n        case 'MARK_CORRECT': {\n            debugger\n            \n            const audioObj = new Audio('audio/correct-answer.mp3')\n            audioObj.play()\n\n            const word = action.payload \n\n            const {copyCard} = state\n            \n            const newAray = copyCard.filter((elem) => {\n                return elem.word !== word \n            })\n\n            console.log(newAray)\n\n            return {    \n                ...state,\n                correctAnswer: [...state.correctAnswer, word],\n                answers: [...state.answers, {word: `${word}`, answer: true}],\n                copyCard: newAray\n            }\n        }\n\n        case 'MARK_ERROR': {\ndebugger\n            const audioObj = new Audio('audio/error2.mp3')\n            audioObj.play()\n\n            const word = action.payload\n\n            return {\n                ...state,\n                errors: state.errors + 1,\n                answers: [...state.answers, {word: `${word}`, answer: false}],\n            }\n        }\n\n        default: {\n            return state\n        }\n    }\n}","import { createStore, combineReducers, applyMiddleware } from 'redux'\n// import thunk from 'redux-thunk'\n\nimport { bodyReducer } from './redux/reducer'\n\nconst reducers = combineReducers({\n    body: bodyReducer\n})\n\nexport const store = createStore(reducers)\n\n// export const store = createStore(reducers, applyMiddleware(thunk))","\nexport const showCategoryCards = (id) => ({\n    \n    type: 'SHOW_CATEGORY_CARDS',\n    payload: id\n})\n\nexport const getCategoryCards = () => ({\n    type: 'GET_CATEGORY_CARDS'\n})\n\nexport const getSoundWord = (audio) => ({\n    type: 'GET_SOUND_WORD',\n    payload: audio\n})\n\nexport const getWordTraslation = (word) => ({\n    type: 'GET_TRANSLATION',\n    payload: word\n})\n\nexport const showMenu = () => ({\n    type: 'SHOW_MENU'\n})\n\nexport const switchAplicationMode = () => ({\n    type: 'SWITCH_MODE'\n}) \n\nexport const startTheGame = () => ({\n    type: 'START_GAME'\n})\n\nexport const markCorrectAnswer = (word) => ({\n    type: 'MARK_CORRECT',\n    payload: word\n}) \n\nexport const markWrongAnswer = (word) => ({\n    type: 'MARK_ERROR',\n    payload: word\n})","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { showMenu } from '../../../redux/actions'\n\nconst ToggleMenuComponents = ({getMenu, isMenuOpen}) => {\n\n    return (\n        <button onClick={getMenu} className={isMenuOpen ? \"hamburger-btn menu-open\":\"hamburger-btn\" }>\n            <span></span> \n        </button>\n    )\n} \n\nexport const ToggleMenu = connect(\n    (state) => ({\n        isMenuOpen:state.body.isMenuOpen\n    }),\n    (dispatch) => bindActionCreators({\n        getMenu: showMenu\n    }, dispatch)\n)(ToggleMenuComponents)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { switchAplicationMode } from '../../../redux/actions'\n\nconst SwitchComponent = ({ switchMode, modeTrain }) => {\n\n    return (\n        <div className=\"switch\">\n            <input onClick={switchMode}\n                type=\"checkbox\">\n            </input>\n            <span className={modeTrain ? \"mode\": \"mode mode-play\"}>{modeTrain ? \"train\" : \"play\"}</span>\n        </div>\n    )\n}\n\nexport const Switch = connect(\n    (state) => ({\n        modeTrain: state.body.modeTrain\n    }),\n    (dispatch) => bindActionCreators({\n        switchMode: switchAplicationMode\n    }, dispatch)\n)(SwitchComponent)","import React, { useCallback, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { NavLink } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\n\nimport { showCategoryCards, getCategoryCards } from '../../../redux/actions'\n\nconst NavBarComponents = ({ activeCategory, isMenuOpen, showCard, getCards, categoryCards, modeTrain }) => {\n    debugger\n    useEffect(() => {\n        debugger\n        getCards()\n    }, [])\n\n    const onclick = useCallback((id) => () => {\n        debugger\n        showCard(id)\n    })\n\n    return (\n        <nav className={isMenuOpen && modeTrain ? \"menu open\" :\n            isMenuOpen && !modeTrain ? \"menu open play\" :\n            !modeTrain ? \"menu play\": \"menu\"}>\n            <ul>\n                <li><NavLink to=\"/\">Main Page</NavLink></li>\n                {categoryCards ?\n                    categoryCards.map((elem) => (\n                        <li onClick={onclick(elem.id)} className={activeCategory === elem.id ? \"active-menu\" : null} ><NavLink to=\"/cards\">{elem.name}</NavLink></li>\n                    ))\n                    : null\n                }\n            </ul>\n        </nav>\n    )\n}\n\nexport const NavBar = connect(\n    (state) => ({\n        isMenuOpen: state.body.isMenuOpen,\n        cards: state.body.cards,\n        categoryCards: state.body.categoryCards,\n        activeCategory: state.body.activeCategory,\n        modeTrain: state.body.modeTrain\n    }),\n    (dispatch) => bindActionCreators({\n        showCard: showCategoryCards,\n        getCards: getCategoryCards,\n    }, dispatch)\n)(NavBarComponents)","import React, { useEffect } from 'react'\n\nimport { ToggleMenu, Switch, NavBar } from './components'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { getCategoryCards } from '../../redux/actions'\n\nconst HeaderComponent = ({ getCards }) => {\n\n    useEffect(() => {\n        getCards()\n    }, [])\n\n    return (\n        <div className=\"container header\">\n            <ToggleMenu />\n            <Switch />\n            <NavBar />\n        </div>\n    )\n}\n\nexport const Header = connect(\n    null,\n    (dispatch) => bindActionCreators({\n        getCards: getCategoryCards\n    }, dispatch)\n)(HeaderComponent)\n","import React, {useCallback} from 'react'\n\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { showCategoryCards } from '../../redux/actions'\n \nconst CategoryCardComponent = ({ name, image, showCards, dataId, id, modeTrain }) => {\n\n    const onclick = useCallback((id) => () => {\n        debugger\n        showCards(id)\n    })\n\n    return (\n        <NavLink to=\"/cards\" className={modeTrain ? \"category-card\" :\"category-card play\" } onClick={onclick(id)} id={id}>\n            <img src={image}></img>\n            {name}\n        </NavLink>\n    )\n}\n\nexport const CategoryCard = connect(\n    (state) => ({\n        modeTrain:state.body.modeTrain\n    }),\n    (dispatch) => bindActionCreators({\n        showCards: showCategoryCards\n    }, dispatch)\n)(CategoryCardComponent)","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { getWordTraslation, markCorrectAnswer, markWrongAnswer, startTheGame } from '../../redux/actions'\n\nconst CardComponent = ({ image, translation, word, audio, wordTranslation, getTraslation, \n                         modeTrain, gameWord, markCorrect, markError, startGame, correctAnswer, onclick}) => {\n    debugger\n\n    const clickRotate = useCallback((word) => () => {\n        debugger\n        getTraslation(word)\n    })\n\n    return (\n            <div className=\"wrapper-card \">\n                \n                <div onClick={onclick} style={{ transform: wordTranslation === word ? \"rotateY(180deg)\" : \"none\",\n                opacity: correctAnswer.includes(word) && !modeTrain ? 0.5 : 1 }\n            }\n                     className=\"card\">\n                    {\n                        !modeTrain ?\n\n                            <div className=\"img-wrapper-play\">\n                                <img src={`/${image}`}></img>\n                            </div>\n                            : <>\n                                <div className=\"front\">\n                                    <div className=\"img-wrapper\">\n                                        <img src={`/${image}`}></img>\n                                    </div>\n                                    <p>{word}</p>\n                                </div>\n                                {\n                                    wordTranslation === word ?\n                                        <div className=\"back\" onMouseOut={clickRotate(translation)}>\n                                            <div className=\"img-wrapper\">\n                                                <img crs={image}></img>\n                                            </div>\n                                            <p>{translation}</p>\n                                        </div>\n                                        : null\n                                }\n\n                                <div onClick={clickRotate(word)} className=\"rotate\">\n                                    <img src='/img/rotate.png'></img>\n                                </div>\n                            </>\n                    }\n\n                </div>\n            </div>\n    )\n}\n\nexport const Card = connect(\n    (state) => ({\n        wordTranslation: state.body.wordTranslation,\n        modeTrain: state.body.modeTrain,\n        isCardFlipped: state.body.isCardFlipped,\n        correctAnswer: state.body.correctAnswer,\n        answers: state.body.answers\n    }),\n    (dispatch) => bindActionCreators({\n                getTraslation: getWordTraslation,\n    }, dispatch)\n)(CardComponent)","import React, { useCallback, useEffect } from 'react'\n\n// import card from '../../cards'\nimport { CategoryCard } from './CategoryCard'\nimport { Card } from './Card'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { NavLink } from 'react-router-dom'\nimport { getCategoryCards, getSoundWord } from '../../redux/actions'\n\n// import cards from '../../cards'\n// import { bodyReducer } from './reducer'\n\nconst BodyComponent = ({ categoryCards, showCard, getCards, cards, trainWord, audioSRC }) => {\n    \n    return (\n        <div className=\"container main-page\">\n            <div className=\"indent\"></div>\n            {\n                categoryCards ?\n                    categoryCards.map((elem) => (\n                            <CategoryCard name={elem.name}\n                                image={elem.image}\n                                id={elem.id} />))\n                    : null\n            }\n        \n        </div>\n    )\n}\n\nexport const Body = connect(\n    (state) => ({\n        categoryCards: state.body.categoryCards,\n        cards: state.body.cards,\n        // audioSRC: state.body.audioSRC\n    }),\n    (dispatch) => bindActionCreators({\n        trainWord: getSoundWord\n    }, dispatch)\n)(BodyComponent)","import React, {useCallback} from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { Card } from '../Body/Card'\n\nimport { getCategoryCards, startTheGame, markCorrectAnswer, markWrongAnswer } from '../../redux/actions'\n\n\nconst CategoryPageComponent = ({ cards, modeTrain, startGame, correctAnswer, wrongAnswer, answers, markCorrect, markError, gameWord }) => {\n    \n    const clickStart = useCallback(() => () => {\n\n        startGame()\n    })\n\n    const clickTrain = useCallback((audio) => () => {\n        debugger\n        const audioObj = new Audio(`/${audio}`);\n        audioObj.play()\n    })\n\n    const clickPlay = useCallback((word, gameWord) => () => {\n        debugger\n        if (word === gameWord) {\n            markCorrect(word)\n            setTimeout(startGame, 1000)\n        } else  {\n            markError(word)\n            setTimeout(startGame, 1000)\n        }\n    })\n\n    return (\n        <div className=\"container main-page\">\n                <div className=\"rating\">\n                    {\n                        answers.map((elem) => (\n                            <div className={elem.answer ? \"star correct\": \"star wrong\"}></div>))\n                    }\n                </div>\n            {\n                cards ?\n                    cards.map((elem) => <Card word={elem.word} translation={elem.translation}\n                        image={elem.image} audio={elem.audioSrc} onclick={ modeTrain ? clickTrain(elem.audioSrc): \n                            correctAnswer.includes(elem.word) ? undefined:\n                            clickPlay(elem.word, gameWord)}/>)\n                : null   \n            }\n            {\n                !modeTrain && <div className=\"btns\"><button onClick={clickStart()} className=\"btn\">Start Game</button></div>\n            }\n        </div>\n    )\n}\n\nexport const CategoryPage = connect(\n    (state) => ({\n        cards: state.body.cards,\n        modeTrain: state.body.modeTrain,\n        correctAnswer: state.body.correctAnswer,\n        wrongAnswer: state.body.wrongAnswer,\n        answers: state.body.answers,\n        gameWord: state.body.gameWord,\n\n    }),\n    (dispatch) => bindActionCreators({\n       startGame: startTheGame,\n       markCorrect: markCorrectAnswer,\n       markError: markWrongAnswer,\n    }, dispatch)\n)(CategoryPageComponent)\n\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst ResultPageComponent = ({errors}) => {\n\n    return (\n        \n        <div className=\"result\"> \n            <h1>{errors} {errors === 1 ? \"error\": \"errors\" }</h1>\n        </div>\n    )\n}\n\nexport const ResultPage = connect(\n    (state) => ({\n        errors: state.body.errors\n    }),\n    null\n)(ResultPageComponent)","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { store } from './store'\nimport { Route, BrowserRouter } from 'react-router-dom'\n\nimport { Header, Body, CategoryPage, ResultPage } from './components'\n// import { MainPage } from './components'\n\nfunction App() {\n  debugger\n\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"app\">\n          <Header />\n          <Route path=\"/\" exact render={() => <Body />} />\n          <Route path=\"/cards\" render={() => <CategoryPage />} />\n          <Route path=\"/result\" render={() => <ResultPage />} />\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}